CREATE TABLE DM_ENTITY (
    ENTITY_ID BIGINT NOT NULL, 
    ENTITY_NAME VARCHAR(250), 
    RECORD_COUNT INTEGER, 
    RELATION_COUNT INTEGER, 
    RESUME_HASH VARCHAR(500), 
    FIRST_SEEN_DT TIMESTAMP, 
    LAST_SEEN_DT TIMESTAMP, 
PRIMARY KEY(ENTITY_ID));

CREATE TABLE DM_RECORD (
    DATA_SOURCE VARCHAR(25) NOT NULL, 
    RECORD_ID VARCHAR(250) NOT NULL, 
    ENTITY_ID BIGINT NOT NULL, 
    FIRST_SEEN_DT TIMESTAMP, 
    LAST_SEEN_DT TIMESTAMP, 
PRIMARY KEY(RECORD_ID, DATA_SOURCE));
CREATE INDEX IX_DM_RECORD on DM_RECORD (ENTITY_ID);

CREATE TABLE DM_RELATION (
    ENTITY_ID BIGINT NOT NULL, 
    RELATED_ID BIGINT NOT NULL, 
    MATCH_LEVEL SMALLINT, 
    MATCH_KEY VARCHAR(250), 
    MATCH_CATEGORY VARCHAR(25), 
    DATA_SOURCES VARCHAR(250), 
    FIRST_SEEN_DT TIMESTAMP, 
    LAST_SEEN_DT TIMESTAMP, 
PRIMARY KEY(ENTITY_ID, RELATED_ID));

CREATE TABLE DM_REPORT (
    REPORT_KEY VARCHAR(250) NOT NULL, 
    REPORT VARCHAR(25), 
    STATISTIC VARCHAR(25), 
    DATA_SOURCE1 VARCHAR(25), 
    DATA_SOURCE2 VARCHAR(25), 
    ENTITY_COUNT BIGINT, 
    RECORD_COUNT BIGINT, 
    RELATION_COUNT BIGINT, 
    REPORT_NOTES VARCHAR(250), 
PRIMARY KEY(REPORT_KEY));

CREATE TABLE DM_REPORT_DETAIL (
    REPORT_KEY VARCHAR(250) NOT NULL, 
    ENTITY_ID BIGINT NOT NULL, 
    RELATED_ID BIGINT NOT NULL DEFAULT(0), 
    REPORT_NOTES VARCHAR(250), 
PRIMARY KEY(ENTITY_ID, RELATED_ID, REPORT_KEY));
CREATE INDEX IX_DM_REPORT_DETAIL on DM_REPORT_DETAIL (REPORT_KEY, ENTITY_ID);

CREATE TABLE DM_ALERT (
    ENTITY_ID BIGINT NOT NULL,
    RESUME_HASH VARCHAR(500), 
    ALERT_REASON VARCHAR(50),
    ALERT_STATUS VARCHAR(25), 
    FIRST_SEEN_DT TIMESTAMP, 
    LAST_SEEN_DT TIMESTAMP);
CREATE INDEX IX_DM_ALERT on DM_ALERT (ENTITY_ID);

CREATE TABLE ER_FEEDBACK (
    DATA_SOURCE1 VARCHAR(25),
    RECORD_ID1 VARCHAR(250),
    DATA_SOURCE2 VARCHAR(25),
    RECORD_ID2 VARCHAR(250),
    USER_NAME VARCHAR(50),
    JUSTIFICATION VARCHAR(500),
    FEEDBACK_TYPE CHAR(2), --FR, UR
    TRUSTED_ID_NUMBER1 VARCHAR(250),
    TRUSTED_ID_NUMBER2 VARCHAR(250),
    CREATE_DT TIMESTAMP,
PRIMARY KEY(RECORD_ID1, DATA_SOURCE1, RECORD_ID2, DATA_SOURCE2));
CREATE INDEX IX_ER_FEEDBACK on ER_FEEDBACK (RECORD_ID2, DATA_SOURCE2);

CREATE VIEW EDA_ENTITY_SIZE_BREAKDOWN AS
SELECT 
  CAST(STATISTIC AS INTEGER) AS ENTITY_SIZE,
  ENTITY_COUNT AS ENTITY_COUNT
FROM DM_REPORT
WHERE REPORT = 'ESB';

CREATE VIEW EDA_DATA_SOURCE_SUMMARY AS
SELECT 
  A.DATA_SOURCE1 AS DATA_SOURCE,
  A.RECORD_COUNT AS RECORD_COUNT,
  IFNULL((SELECT ENTITY_COUNT FROM DM_REPORT WHERE DATA_SOURCE1 = A.DATA_SOURCE1 AND REPORT='DSS' AND STATISTIC = 'ENTITY_COUNT'), 0) AS ENTITY_COUNT,
  IFNULL((SELECT ENTITY_COUNT FROM DM_REPORT WHERE DATA_SOURCE1 = A.DATA_SOURCE1 AND REPORT='DSS' AND STATISTIC = 'SINGLE_COUNT'), 0) AS SINGLE_COUNT,
  IFNULL((SELECT ENTITY_COUNT FROM DM_REPORT WHERE DATA_SOURCE1 = A.DATA_SOURCE1 AND REPORT='DSS' AND STATISTIC = 'DUPLICATE_COUNT'), 0) AS DUPLICATE_COUNT,
  IFNULL((SELECT ENTITY_COUNT FROM DM_REPORT WHERE DATA_SOURCE1 = A.DATA_SOURCE1 AND REPORT='DSS' AND STATISTIC = 'AMBIGUOUS_MATCH_COUNT'), 0) / 2 AS AMBIGUOUS_MATCH_COUNT,
  IFNULL((SELECT ENTITY_COUNT FROM DM_REPORT WHERE DATA_SOURCE1 = A.DATA_SOURCE1 AND REPORT='DSS' AND STATISTIC = 'POSSIBLE_MATCH_COUNT'), 0) / 2 AS POSSIBLE_MATCH_COUNT,
  IFNULL((SELECT ENTITY_COUNT FROM DM_REPORT WHERE DATA_SOURCE1 = A.DATA_SOURCE1 AND REPORT='DSS' AND STATISTIC = 'POSSIBLY_RELATED_COUNT'),0) / 2 AS POSSIBLY_RELATED_COUNT
FROM DM_REPORT A
WHERE A.REPORT = 'DSS' AND A.STATISTIC = 'RECORD_COUNT';

CREATE VIEW EDA_CROSS_SOURCE_SUMMARY AS
SELECT 
  A.DATA_SOURCE1,
  A.DATA_SOURCE2,
  IFNULL((SELECT ENTITY_COUNT FROM DM_REPORT WHERE DATA_SOURCE1 = A.DATA_SOURCE1 AND DATA_SOURCE2 = A.DATA_SOURCE2 AND REPORT='CSS' AND STATISTIC = 'MATCHED_COUNT'), 0) AS MATCH_COUNT,
  IFNULL((SELECT ENTITY_COUNT FROM DM_REPORT WHERE DATA_SOURCE1 = A.DATA_SOURCE1 AND DATA_SOURCE2 = A.DATA_SOURCE2 AND REPORT='CSS' AND STATISTIC = 'AMBIGUOUS_MATCH_COUNT'), 0) AS AMBIGUOUS_MATCH_COUNT,
  IFNULL((SELECT ENTITY_COUNT FROM DM_REPORT WHERE DATA_SOURCE1 = A.DATA_SOURCE1 AND DATA_SOURCE2 = A.DATA_SOURCE2 AND REPORT='CSS' AND STATISTIC = 'POSSIBLE_MATCH_COUNT'), 0) AS POSSIBLE_MATCH_COUNT,
  IFNULL((SELECT ENTITY_COUNT FROM DM_REPORT WHERE DATA_SOURCE1 = A.DATA_SOURCE1 AND DATA_SOURCE2 = A.DATA_SOURCE2 AND REPORT='CSS' AND STATISTIC = 'POSSIBLY_RELATED_COUNT'),0) AS POSSIBLY_RELATED_COUNT
FROM (SELECT DISTINCT DATA_SOURCE1, DATA_SOURCE2 FROM DM_REPORT WHERE REPORT = 'CSS') A;
